<?xml version="1.0"?>
<project name="fest-swing-junit-test" default="all" basedir="." xmlns:artifact="urn:maven-artifact-ant">

	<property name="src.dir" value="${basedir}/src" />
	<property name="src.main" value="${src.dir}/main" />
	<property name="src.main.java.dir" value="${src.main}/java" />
	<property name="src.main.resources.dir" value="${src.main}/resources" />
	<property name="src.test.java.dir" value="${src.dir}/test/java" />

	<property name="lib.dir" value="${basedir}/lib" />
	<property name="lib.cobertura.dir" value="../cobertura" />

	<property name="target.dir" value="${basedir}/target" />
	<property name="target.classes.dir" value="${target.dir}/classes" />
	<property name="target.test.classes.dir" value="${target.dir}/test-classes" />
	<property name="target.test.results.dir" value="${target.dir}/test-reports" />
	<property name="target.coverage.report.dir" value="${target.dir}/coverage-reports" />
	<property name="target.javadocs.dir" value="${target.dir}/javadocs" />
	<property name="target.dist.dir" value="${target.dir}/dist" />

	<property name="test.includes" value="**/*Test.class" />
	<property name="test.excludes" value="**/*TestCase.class" />

	<property name="compiler" value="javac1.5" />
	<property name="compiler.optimize" value="true" />
	<property name="compiler.debug" value="true" />
	<property name="compiler.deprecation" value="true" />
	<property name="compiler.javac.source" value="1.5" />
	<property name="compiler.javac.target" value="1.5" />

	<property name="target.junit.results.dir" value="${target.dir}/junit-results" />
	<property name="target.junit.report.dir" value="${target.dir}/junit-report" />

	<target name="all" depends="compile, test-junit" />

	<target name="compile" depends="compile.main, compile.tests" />

	<target name="compile.main" depends="init">
		<javac compiler="${compiler}" destdir="${target.classes.dir}" debug="${compiler.debug}" deprecation="${compiler.deprecation}" optimize="${compiler.optimize}" source="${compiler.javac.source}" target="${compiler.javac.target}">
			<src path="${src.main.java.dir}" />
			<classpath refid="lib.classpath" />
		</javac>
	</target>

	<target name="init" depends="init-classpath">
		<delete dir="${target.dir}" failonerror="false" />
		<mkdir dir="${target.dir}" />
		<mkdir dir="${target.classes.dir}" />
		<mkdir dir="${target.test.results.dir}" />
		<mkdir dir="${target.test.classes.dir}" />
		<mkdir dir="${target.test.results.dir}" />
		<mkdir dir="${target.dist.dir}" />
	</target>

	<target name="init-maven">
		<path id="maven.classpath">
			<pathelement location="${basedir}/maven-ant-tasks/maven-ant-tasks-2.0.9.jar" />
		</path>
		<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
			<classpath refid="maven.classpath" />
		</typedef>
		<artifact:pom file="pom.xml" id="maven.project" />
		<echo>Building project '${maven.project.artifactId}' v. ${maven.project.version}</echo>
		<artifact:dependencies verbose="true" filesetId="dependency.fileset" pathId="dependency.classpath" settingsFile="${basedir}/settings.xml" pomRefId="maven.project" />
	</target>

	<target name="init-classpath" depends="init-maven">
		<copy todir="${lib.dir}">
			<fileset refid="dependency.fileset" />
			<mapper type="flatten" />
		</copy>
		<path id="lib.classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar,**/*.zip" />
		</path>
	</target>

	<target name="compile.tests">
		<javac compiler="${compiler}" destdir="${target.test.classes.dir}" debug="${compiler.debug}" deprecation="${compiler.deprecation}" optimize="${compiler.optimize}" source="${compiler.javac.source}" target="${compiler.javac.target}">
			<src path="${src.test.java.dir}" />
			<classpath>
				<pathelement location="${target.classes.dir}" />
			</classpath>
			<classpath refid="lib.classpath" />
		</javac>
	</target>

	<target name="test-junit" depends="compile">
		<taskdef resource="festjunittasks" classpathref="lib.classpath" />
		<mkdir dir="${target.junit.results.dir}" />
		<mkdir dir="${target.junit.report.dir}" />
		<junit forkmode="perBatch" printsummary="yes" haltonfailure="no" haltonerror="no">
			<classpath refid="lib.classpath" />
			<classpath location="${target.test.classes.dir}" />
			<classpath location="${target.classes.dir}" />
			<formatter classname="org.fest.swing.junit.ant.ScreenshotOnFailureResultFormatter" extension=".xml" />
			<batchtest fork="yes" todir="${target.junit.results.dir}">
				<fileset dir="${target.test.classes.dir}" includes="**/*Test*.class" />
			</batchtest>
		</junit>
		<festreport todir="${target.junit.report.dir}">
			<classpath refid="lib.classpath" />
			<fileset dir="${target.junit.results.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${target.junit.report.dir}/html" />
		</festreport>
	</target>
</project>
